{
  "editor.fontFamily": "Ricty Diminished",
  "workbench.iconTheme": "vscode-icons",
  "editor.fontSize": 14,
  "editor.lineHeight": 16,
  "terminal.integrated.fontFamily": "MesloLGL Nerd Font",
  "terminal.integrated.fontSize": 11,
  "intelephense.diagnostics.undefinedConstants": false,
  "intelephense.diagnostics.undefinedFunctions": false,
  "intelephense.diagnostics.undefinedMethods": false,
  "intelephense.diagnostics.undefinedProperties": false,
  "intelephense.diagnostics.undefinedTypes": false,
  "intelephense.diagnostics.undefinedClassConstants": false,
  "workbench.colorTheme": "GitHub Dark Default",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "editor.wordWrap": "on",
  "vim.leader": "<space>",
  // "vim.hlsearch": false,
  "vim.easymotion": true,
  "vim.easymotionKeys": "sdfghkl",
  "vim.visualModeKeyBindings": [
    {
      "before": [">"],
      "after": [">", "g", "v"]
    },
    {
      "before": ["<"],
      "after": ["<", "g", "v"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>", "<space>", "w"]
    }
  ], // return normal when file save
  // "vim.insertModeKeyBindingsNonRecursive": [
  //     {
  //         "before": ["<C-d>"],
  //         "commands": ["deleteLeft"]
  //     }
  // ],
  //  "vim.normalModeKeyBindingsNonRecursive": [
  //   {
  //    "before": ["<Enter>"],
  //     "commands": ["editor.action.insertLineAfter"]
  //   }
  // ],

  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "p"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "m"],
      "commands": ["bookmarks.list"]
    },
    {
      "before": ["<leader>", "n"],
      "commands": ["bookmarks.toggleLabeled"]
    },
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<leader>", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["<leader>", "d", "s"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["<leader>", "d", "r"],
      "commands": ["workbench.action.debug.restart"]
    },
    {
      "before": ["<leader>", "d", "e"],
      "commands": ["workbench.action.debug.stop"]
    },
    {
      "before": ["<leader>", "d", "u"],
      "commands": ["workbench.action.debug.stepOver"]
    },
    {
      "before": ["<leader>", "d", "i"],
      "commands": ["workbench.action.debug.stepInto"]
    },
    {
      "before": ["<leader>", "d", "o"],
      "commands": ["workbench.action.debug.stepOut"]
    },
    {
      "before": ["<leader>", "<C-r>"],
      "commands": ["workbench.action.openRecent"]
    },
    {
      "before": [";", ";"],
      "commands": ["workbench.action.focusPreviousGroup"]
    }
  ],
  "editor.renderLineHighlight": "all",
  "editor.renderWhitespace": "boundary",
  "workbench.tree.renderIndentGuides": "always",
  "tabnine.experimentalAutoImports": true,
  "editor.minimap.maxColumn": 25,
  "gitlens.codeLens.scopes": ["document", "containers"],
  "terminal.integrated.macOptionClickForcesSelection": true,
  "files.autoSave": "onFocusChange",
  "editor.cursorStyle": "line",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "files.autoGuessEncoding": true,
  // "editor.lineHeight": 0,
  // "editor.formatOnSave": true
  "indentRainbow.colors": [
    // "rgba(200,200,200,0.03)",
    "rgba(100,100,100,0.03)",
    "rgba(0,0,0,0.03)"
    // "rgba(255,255,64,0.02)",
    // "rgba(127,255,127,0.02)",
    // "rgba(255,127,255,0.02)",
    // "rgba(79,236,236,0.02)"
  ],
  "indentRainbow.errorColor": "rgba(128,32,32,0.1)",
  // The indent color when there is a mix between spaces and tabs.
  // To be disabled this coloring set this to an empty string.
  "indentRainbow.tabmixColor": "rgba(128,32,96,0.1)",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "bracket-pair-colorizer-2.colors": [
    // "rgb(95, 158, 160)",
    // "rgb(198, 198, 0)",
    // "rgb(207, 65, 0)",
    // "rgb(208, 208, 0)",
    // ice barge "#e2a478",
    // "#e2a478",
    // "#84a0c6",
    // "#89b8c2",
    // ice barge "#e27878"
    // "#e27878"
    // "#e98989"
    // "rgb(62, 255, 155)",
    // "rgb(0, 241, 116)",
    // "rgb(150, 150, 0)",
    // "rgb(100, 149, 237)",
    // "rgb(30, 144, 255)",
    // "rgb(70, 110, 230)",
    // "rgb(127, 255, 212)",
    // "#c5c8d1",
    // "#b6b7ba"
    // "rgb(200,200,200)",
    // "#999366",
    // "#b1a870",
    // "rgb(180,180,180)",
    // "rgb(180,180,180)",
    "rgb(160,160,160)",
    "rgb(150,150,150)"
  ],
  "haskell.ghcMod.executablePath": "stack",
  "go.toolsManagement.autoUpdate": true,
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": ".php$",
        "cmd": "prettier ${file} --write"
      }
    ]
  },
  // "editor.formatOnSave": true,
  "workbench.colorCustomizations": {
    "[Kitty VSCode Theme]": {},
    "editorCursor.foreground": "#999366",
    "terminalCursor.foreground": "#b1a870"
  },
  "rust.clippy_preference": "on",
  "javascript.updateImportsOnFileMove.enabled": "never",
  "plantuml.render": "PlantUMLServer",
  "plantuml.server": "http://localhost:8088",
  "blade.format.enable": true,
  "bladeFormatter.format.indentSize": 2,
  "bladeFormatter.format.useTabs": true,
  "vsicons.dontShowNewVersionMessage": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
  },
  "files.saveConflictResolution": "overwriteFileOnDisk",
  "editor.trimAutoWhitespace": false,
  "files.trimTrailingWhitespace": false,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": false,
  "editor.bracketPairColorization.enabled": true,
  "haskell.manageHLS": "PATH",
  "npm.keybindingsChangedWarningShown": true,
  "eslint.codeActionsOnSave.rules": null,
  "rapidapi.terminalLink.enabled": false,
  "workbench.activityBar.visible": true,
  "diffEditor.ignoreTrimWhitespace": false
}
