
# basic
# ---------------------------------------------------------------------------- #

set -g default-terminal 'screen-256color'
set-option -ga terminal-overrides ',alacritty:RGB'
# prefix キーを Ctrl-b から Ctrl-j に変える
# Ctrl-b は他（vi キーバインド）とかぶるので、かぶらないものに変えた方が良さげ
# Ctrl-j なら影響少なそう、押しやすそう
set-option -g prefix C-j
unbind-key C-b

# いろんなところで vi キーバインドが使えます
# vi に馴染みがない人は外した方が良さげ
# でもこれを機会にペイン移動だけでも hjkl 使ったらいいと思う！
set-window-option -g mode-keys vi
set-option -g @shell_mode 'vi'

# キーボード側が左から 1,2... と並んでいるので、
# キーボード位置に合わせてウィンドウに1から番号振ると分かりやすい
# でないと 0 だけ右、次の1は左、みたいにややこしい
set-option -g base-index 1
set-option -g pane-base-index 1

# finger key : prefix + thisKey
#set -g @fingers-key S-f

# ---------------------------------------------------------------------------- #
# mapping
# ---------------------------------------------------------------------------- #

# <prefix> + r で勝手に .tmux.conf を読み込んでくれる
# これだけはあった方が良いぞ！
# from http://d.hatena.ne.jp/kiririmode/20120321/p1
bind-key r source-file ~/.tmux.conf\; display-message "$HOME/.tmux.conf reloaded!"

# tmux-yank でコピーの選択開始が動かなくなってた？みたいなので、
# 手動で bind-key の設定しちゃう（後述）
bind-key -T copy-mode-vi 'v' send-keys -X  begin-selection

# pane move
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resize
bind < resize-pane -L 3
bind > resize-pane -R 3
bind ( resize-pane -U 3
bind ) resize-pane -D 3

# 分割
bind - split-window -h
bind = split-window -v
# ---------------------------------------------------------------------------- #
# appearance
# ---------------------------------------------------------------------------- #

# customize tmux title
# http://man.openbsd.org/OpenBSD-current/man1/tmux.1#FORMATS
set-option -g set-titles on
set-option -g set-titles-string "#{session_name} [#{window_index}:#{window_name}] pane#{pane_index}(#{pane_tty}) w:#{pane_width} h:#{pane_height}"

# color settings
#set-option -g default-terminal screen-256color
#set -g terminal-overrides "xterm:colors=256"



# ---------------------------------------------------------------------------- #
# statusline
# ---------------------------------------------------------------------------- #

# statusline color
set-window-option -g window-status-current-style bright
# set-option -g status-bg colour49
set-option -g status-bg colour16
# set-option -g status-bg blue
# ↓ [work]とかの色
set-option -g status-fg yellow

# position
set-option -g status-position bottom
# set-option -g status-position top

# flush interval
set-option -g status-interval 5

# customize right area (vagrant machines)
# before: `ln -s /path/to/dotfiles/bin/ ~/bin`
#set-option -g status-right "#(${HOME}/bin/vm_status.sh)"
#set-option -g status-right-length 50
set -g status-right-length 120
###set -g status-right \
###"#{?client_prefix,#[reverse],}"\
###"#(tmux-pane-border '#{pane_current_path}') "\
###"#[fg=yellow][%Y/%m/%d(%a)%H:%M]"
# "#[fg=green]#(git-echo-branch-tmux-current-pane)"

# customize left area (session: windows)
set-option -g status-left "[#S] "
set-option -g status-left-length 50

# window format [:bash]とか
set-window-option -g window-status-format "#[fg=yellow][#I:#W]"
# ↓ 現在のwindowの色
 set-window-option -g window-status-current-format "#[fg=colour49][#I:#W]"
## set-window-option -g window-status-current-format "#[fg=colour49][#I:#W]"
### ↓ [bash]とかの色 shedes of purple の色
# set-window-option -g window-status-current-format "#[fg=yellow][#I:#W]"

# showing pane numbers setting
# show: prefix+Q
set-option -g display-panes-time 2000
set-option -g display-panes-colour white
set-option -g display-panes-active-colour red


# 背景色
# set -g window-style 'bg=colour235'
# set -g window-active-style 'bg=colour0'


# set-option -g pane-border-status bottom

# -------------------------------------
# 上部に絶対パス等を表示
# -------------------------------------
# ↓ paneの上部に、番号と絶対パスを表示
# set-option -g pane-border-status top
# ↓ /usr/local/bin/tmux-pane-border に記述されてるスタイルでgit情報などを表示する
# set-option -g pane-border-format "#[fg=colour16,bg=colour16] #(tmux-pane-border '#{pane_current_path}')"
## set-option -g pane-border-format "#[fg=colour16,bg=colour16] #P #(tmux-pane-border '#{pane_current_path}')"

# ↓ 非アクティブ時のボーダーの色 240はグレイ
# set-option -g pane-border-style fg="colour240"
## ↓ shedes of purple の色合い
### set-option -g pane-border-style fg=blue,bg=blue
#### ↓ shades of purple の青、黄
set-option -g pane-border-style fg="colour17",bg="colour18"

# ↓ アクティブ時のボーダーカラー 49は
# set-option -g pane-active-border-style fg="colour49"
## ↓ shedes of purple の色合い
#### ↓ shades of purple の青、黄
set-option -g pane-active-border-style fg="colour3",bg="colour18"
# set-option -g pane-active-border-style fg=yellow,bg="colour18"

# ↓ 下のバーの文字の色
# set-option -g pane-border-format "#[fg=colour49] #P #(tmux-pane-border #{pane_current_path})"
## ↓ shedes of purple の色合い
## set-option -g pane-border-format "#[fg=blue] #P #(tmux-pane-border #{pane_current_path})"

# ---------------------------------------------------------------------------- #
# plugins
# ---------------------------------------------------------------------------- #

# プラグインを管理するためのプラグイン
# 手動で読み込む必要あり！
# <prefix> + I で指定されているプラグインをインストール
# <prefix> + u でアップデート
# set-option -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tpm"

# セッションを保持してくれるプラグイン
# https://github.com/tmux-plugins/tmux-resurrect
# <prefix> + Ctrl-s でセッション保存
# <prefix> + Ctrl-r で復元（リストア）
# set-option -g @plugin "tmux-plugins/tmux-resurrect"
# set -g @plugin "tmux-plugins/tmux-resurrect"

# さらに勝手にセッション保持してくれるプラグイン
# https://github.com/tmux-plugins/tmux-continuum
# @continuum-save-interval を指定することで、保持する間隔を指定できる
# set-option -g @plugin "tmux-plugins/tmux-continuum"
# set -g @plugin "tmux-plugins/tmux-continuum"
# set -g @continuum-save-interval 10

# ファイルツリーが見られるやつ
# https://github.com/tmux-plugins/tmux-sidebar
# <prefix> + <Tab> で表示
# もう一度 <prefix> + <Tab> を押すか、そのペインに移動してから q で閉じる
# set-option -g @plugin "tmux-plugins/tmux-sidebar"
# set -g @plugin "tmux-plugins/tmux-sidebar"

# vi のキーバインドでペイン移動できちゃうやつ
# https://github.com/tmux-plugins/tmux-pain-control
# 結局 tmux のペイン移動を覚える必要があるので、 vi に合わせておくと脳のコスト下がる
# set-option -g @plugin "tmux-plugins/tmux-pain-control"
# set -g @plugin "tmux-plugins/tmux-pain-control"

# 黒い画面からのコピペ
# https://github.com/tmux-plugins/tmux-yank
# <prefix> + y で画面まるまるヤンク（コピー）できる
# 実際は画面全体じゃなく部分的にコピーすることが大半なので、
# <prefix> + [ でコピーモードに切り替えてから、 v を押して選択し y でコピー
# set-option -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-yank'

# chorome vimnium のようなやつ
# set -g @plugin 'fcsonline/tmux-thumbs'

# プラグイン実行
run-shell "~/.tmux/plugins/tpm/tpm"


set -g default-command "${SHELL}"

# powerline
 set-option -g default-terminal screen-256color
 set -g terminal-overrides 'xterm:colors=256'
 run-shell "powerline-daemon -q"
 source "~/.pyenv/versions/3.9.4/lib/python3.9/site-packages/powerline/bindings/tmux/powerline.conf"

set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
